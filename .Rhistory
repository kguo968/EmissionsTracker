Comparison
Comparison$`Name on tab`
runApp()
Comparison %>%
filter(
substr(
`Link to CRF import file`,
1,
stri_locate_first_fixed(Comparison$`Linnk to CRF import file`, " ") - 1
) %in% check$value
)
runApp()
runApp()
runApp()
Comparison
Comparison
runApp()
df_output
Comparison_Frame
df_output
Comparison_Frame
Comparison_Frame %>% round(.$Totals, 2)
Comparison_Frame %>% round(.$Totals)
round(Comparison_Frame$Totals, 2)
Comparison_Frame %>% {round(.$Totals, 2)}
runApp()
runApp()
runApp()
runApp()
runAPp()
runApp()
runApp()
runAPp()
runApp()
runApp()
runApp()
runApp()
df_output
runApp()
runApp()
runApp()
df_output
df_output %>% mutate(`Emissions (kt CO2-e)` = round(`Emissions (kt CO2-e)`, 2))
runApp()
runApp()
runApp()
runApp()
View(emissions)
runApp()
all(emission_sector$`Lowest level?` == "lowest")
emission_sector$`Lowest level?`
runApp()
runApp()
emission_sector
check$value
emission_sector
str_locate_first_fixed(Sector_Frame$data[[1]], " ")
substr(Sector_Frame$data[[1]], 1, stri_locate_first_fixed(Sector_Frame$data[[1]], " "))
substr(emission_sector$`Link to CRF import file`, 1, stri_locate_first_fixed(emission_sector$`Link to CRF import file`, " "))
substr(emission_sector$`Link to CRF import file`, 1, stri_locate_first_fixed(emission_sector$`Link to CRF import file`, " ") - 1)
all(substr(emission_sector$`Link to CRF import file`, 1, stri_locate_first_fixed(emission_sector$`Link to CRF import file`, " ") - 1))
identical(substr(emission_sector$`Link to CRF import file`, 1, stri_locate_first_fixed(emission_sector$`Link to CRF import file`, " ") - 1))
identical(substr(emission_sector$`Link to CRF import file`, 1, stri_locate_first_fixed(emission_sector$`Link to CRF import file`, " ") - 1),
substr(emission_sector$`Link to CRF import file`, 1, stri_locate_first_fixed(emission_sector$`Link to CRF import file`, " ") - 1))
identical(substr(emission_sector$`Link to CRF import file`, 1, stri_locate_first_fixed(emission_sector$`Link to CRF import file`, " ") - 1),
substr(emission_sector$`Link to CRF import file`, 1, stri_locate_first_fixed(emission_sector$`Link to CRF import file`, " ") - 1)[1])
check$value
emissision_sector
emission_sector
identical(substr(emission_sector$`Link to CRF import file`, 1, stri_locate_first_fixed(emission_sector$`Link to CRF import file`, " ") - 1), check$value)
runApp()
runApp()
emission_sector
check$value
runApp()
runApp()
emission_sector
substr(emission_sector$`Link to CRF import file`,1, stri_locate_first_fixed(emission_sector$`Link to CRF import file`, " ")-1,check$value)
substr(emission_sector$`Link to CRF import file`, 1, stri_locate_first_fiexd(emission_sector$`Link to CRF import file`, " "))
substr(emission_sector$`Link to CRF import file`, 1, stri_locate_first_fixed(emission_sector$`Link to CRF import file`, " "))
substr(emission_sector$`Link to CRF import file`, 1, stri_locate_first_fixed(emission_sector$`Link to CRF import file`, " ")) - 1
substr(emission_sector$`Link to CRF import file`, 1, stri_locate_first_fixed(emission_sector$`Link to CRF import file`, " ")-1)
check$value
list <- substr(emission_sector$`Link to CRF import file`, 1, stri_locate_first_fixed(emission_sector$`Link to CRF import file`, " ")-1)
list
length(unique(list)) == 1
runApp()
runApp()
time_sector
time_series_clean %>% filter(`Name on tab` == as.character(Category_Selector$selected))
Category_Selector$selected
Current_Summary$summary
time_series_clean %>% filter(`Name on tab` == as.character(Category_Selector$selected))%>% view()
Current_Summary
Current_Summary$syummary
Current_Summary$summary
Comparison_Frame
Comparison_Frame$data
check$value
view(time_series_clean)
time_series_clean %>%  filter(`Name on tab` == as.character(Category_Selector$selected),
substr(`Link to CRF import file`, 1, stri_locate_first_fixed(.$`Link to CRF import file`, " ")-1 ))
time_series_clean %>% filter(substr(`Link to CRF import file`, 1, stri_locate_first_fixed(time_series_clean$`Link to CRF import file`, " ")-1) == check$value)
runApp()
runApp()
runAPp()
runApp()
time_sector$`Link to CRF import file`
check$value
time_sector %>% filter(substr(`Link to CRF import file`, 1, stri_locate_first_fixed(time_sector$`Link to CRF import file`, " ")-1) == check$value)
runApp()
runApp()
runAPp()
runApp()
check$value
sector_level
sector_level
sector_level %>% dplyr::arrange(`Link to CRF import file`)
Q
runApp()
runApp()
sector_level
runApp()
runApp()
!all(sector_level$Totals > 0)
!all(sector_level$Totals < 0)
runApp()
runApp()
time_sector
view(time_sector_clean)
view(time_series_clean)
Category_Selector$selected
?switch
time_sector
time_sector[,2005]
time_sector[,1]
time_sector[,2]
time_sector[,'2000']
time_sector[,as.character(c(2000:2018))]
time_sector[,as.character(c(2000:2018))] <- 0
time_sector
runApp()
Category_Selector$selected
runApp()
Category_Selector$selected
runApp()
runAPp()
runApp()
runApp()
time_sector
time_sector
filtered_GHG
time_sector
time_sector
Year_Selector$toHighlight
time_sector
t
emissions %>%
filter(`Layer in hierarchy` == 1, Sector == Sector_Frame$data[1,12]) %>%  select(all_of(GHG_Selector$selected), Year)
level()
emissions %>% filter(`Name on tab` == as.character(Category_Selector$selected)) %>% select(all_of(GHG_Selector$selected), Year)
Category_Selector$selected
emissions %>% filter(`Name on tab` == as.character(Category_Selector$selected)) %>% view()
runApp()
runApp()
emission_sector
check$value
runApp()
shiny::runApp()
Category_Selector$tracker
Category_Selector$tracker
Category_Selector$tracker
str_remove(Category_Selector$tracker, "\\]$")
str_remove(Category_Selector$tracker, "\\[[\\s\\.\\w]+\\]$")
str_remove(Category_Selector$tracker, "\\[[\\s\\.\\w\\-]+\\]$")
str_remove(Category_Selector$tracker, "\\[[^\\[]]+\\]$")
str_remove(Category_Selector$tracker, "\\[[.]]+\\]$")
str_remove(Category_Selector$tracker, "\\[[.]+\\]$")
str_remove(Category_Selector$tracker, "\\[+\\]$")
str_remove(Category_Selector$tracker, "\\[.+\\]$")
str_remove(Category_Selector$tracker, "\\[[.]+\\]$")
str_remove(Category_Selector$tracker, "\\[[^\\[]+\\]$")
runApp()
runApp()
runAPp()
runApp()
Category_Selector$selected
Category_Selector$selected
Category_Selector$tracker
time_series_clean
Sector_year %>% filter(`Location of Node in hierarchy` == Category_Selector$tracker)
Sector_Frame$data %>% filter(`Location of Node in hierarchy` == Category_Selector$tracker)
shiny::runApp()
Emission_year$data %>% filter(`Location of Node in hierarchy` == Category_Selector$tracker)
Emission_year$data %>% filter(`Location of Node in hierarchy` == Category_Selector$tracker) %>% mutate(Emissions = rowSums(t[,-dim(t)[2], drop = FALSE])) %>% dplyr::arrange(-row_number())
Emission_year$data %>% filter(`Location of Node in hierarchy` == Category_Selector$tracker)
Emission_year$data %>% filter(`Location of Node in hierarchy` == Category_Selector$tracker) %>% mutate(Emissions = rowSums(.[,-dim(.)[2], drop=FALSE])) %>% dplyr::arrange(-row_number())
runApp()
t %>% mutate(Emissions = rowSums(t[,-dim(t)[2], drop = FALSE])) %>%  dplyr::arrange(-row_number())
t
t %>% select(all_of(GHG_Selector$selected), Year)
Emission_year$data %>% filter(`Location of Node in hierarchy` == Category_Selector$tracker) %>% select(all_of(GHG_Selector_selected), Year) %>% mutate(Emissions = rowSums(.[,-dim(.)[2], drop = FALSE])) %>% dplyr::arrange(-row_number())
Emission_year$data %>% filter(`Location of Node in hierarchy` == Category_Selector$tracker) %>% select(all_of(GHG_Selector$selected), Year) %>% mutate(Emissions = rowSums(.[,-dim(.)[2], drop = FALSE])) %>% dplyr::arrange(-row_number())
runApp()
runApp()
runApp()
t
emissions %>% filter(`Layer in hierarchy` == 0)
emissions %>% filter(`Location of Node in hierarchy` == Category_Selector$tracker)
emission %>% filter(`Layer in hierarchy` == 0)
emissions %>% filter(`Layer in hierarchy` == 0)
runApp()
t
emissions %>% filter(`Layer in hierarchy` == 0)
emissions %>% view()
View(emissions)
load(file = "emissions.rda")
View(emissions)
source("helper.R")
getSheet()
load(file = "emissions.rda")
View(emissions)
View(emissions)
source("library.R")
# Function which extracts all the useful observations from the provided excel file
sheets <-
excel_sheets(
"Data/Sent to Datacom 25 March 2020 - Emissions data 1990-2018 for Emissions Tracker 2020 submission version T from CRF 13 Feb 2020.xlsx"
)[-c(1, 31)]
list_emissions <-
lapply(sheets, function(x)
read_excel(
"Data/emissions data.xlsx",
sheet = x,
range = c("A11:AP1072")
)[,
c(1:4, 11, 18, 26, 27, 29, 38, 40, 41, 42)])
head(list_emissions[[1]])
cleanSheet <- function(x) {
browser()
emissions <- x
col_len <- dim(emissions)[2]
emissions <- emissions[-2,]
emissions[emissions == "Exclude"] <- '0'
if (col_len == 13) {
emissions$`Lowest level?`[is.na(emissions$`Lowest level?`)] <-
"False"
emissions[, -c(1, 2, 10:13)] <-
lapply(emissions[,-c(1, 2, 10:13)], function(x)
unlist(as.numeric(x)))
emissions[rowSums(is.na(emissions)) > 0, 4:9] <- 0
emissions <-
emissions[apply(emissions[,-c(1:2, 10:13)], 1, function(x)
! all(x == 0)), ]
emissions[, col_len + 1] <-
apply(emissions[, 1], 1, function(x)
substr(x, 1, 1))
names(emissions)[col_len + 1] <- "Sector"
for (i in 1:dim(emissions)[1]) {
emissions[i, col_len + 1] <-
(sectorAllocate(emissions[i, col_len + 1]))
}
} else {
emissions[, -c(1, 2, 33)] <-
lapply(emissions[,-c(1, 2, 33)], function(x)
unlist(as.numeric(x)))
emissions[emissions$...3 != 0, ]
}
names(emissions)[3] <- "Totals"
emissions
}
for (i in 1:length(sheets)) {
list_emissions[[i]] <- cleanSheet(list_emissions[[i]])
list_emissions[[i]]$Year <- as.double(sheets[i])
}
head(x)
emissions
emissions
emissions
for (i in 1:length(sheets)) {
list_emissions[[i]] <- cleanSheet(list_emissions[[i]])
list_emissions[[i]]$Year <- as.double(sheets[i])
}
emissions
emissions[rowSums(is.na(emissions)) > 0]
emissions[rowSums(is.na(emissions)) > 0, 4:9]
emissions
emissions
for (i in 1:length(sheets)) {
list_emissions[[i]] <- cleanSheet(list_emissions[[i]])
list_emissions[[i]]$Year <- as.double(sheets[i])
}
emissions[rowSums(is.na(emissions[,4:9])), 4:9]
emissions[rowSums(is.na(emissions)), 4:9]
emissions
is.na(emissions)
is.na(emissions[4:9])
emissions[is.na(emissions[4:9]),]
emissions[is.na(emissions[4:9]) == TRUE,4:9]
emissions[is.na(emissions)]
emissions[is.na(emissions), ]
emissions[rowSums(is.na(emissions))>0, ]
emissions[rowSums(is.na(emissions[,4:9]))>0, ]
is.na(emissions[rowSums(is.na(emissions[,4:9]))>0, ])
is.na(emissions[rowSums(is.na(emissions[,4:9]))>0, ]) == TRUE
emissions[,is.na(emissions[rowSums(is.na(emissions[,4:9]))>0, ])]
emissions[is.na(emissions[rowSums(is.na(emissions[,4:9]))>0, ]),is.na(emissions[rowSums(is.na(emissions[,4:9]))>0, ])]
emissions[rowSums(is.na(emissions[,4:9]))>0, ]
emissions[is.na(emissions[,4:9])]
emissions[is.na(emissions[,4:9]), ]
emissions[rowSums(is.na(emissions[,4:9]) > 0, ]
emissions[rowSums(is.na(emissions[,4:9])) > 0, ]
emissions[rowSums(is.na(emissions[,4:9])) > 0, 4:9]
emissions[rowSums(is.na(emissions[,4:9])) > 0, ]
emissions[rowSums(is.na(emissions[,4:9])) > 0, ][4:9]
emissions[rowSums(is.na(emissions[,4:9])) > 0, ][is.na()]
emissions[,4:9][is.na(emissions[, 4:9])]
emissions[,4:9][is.na(emissions[, 4:9])] <- 0
emissions[rowSums(is.na(emissions[,4:9])) > 0, ]
runApp()
getSheet()
source("helper.R")
getSheet()
runApp()
t
emissions %>% filter(`Layer in hierarchy` == 1, Sector == Sector_Frame$data[1,12])
Secctor_Frame$data[1,12
]
Sector_Frame$data[1,12]
Sector_Frame$data[1,13]
Sector_Frame$data[1,14]
emissions %>% filter(`Location of Node in hierarchy` == Category_Selector$tracker)
Category_Selector$selected
Category_Selector$GUID
emissions %>% filter(`GUID of node` == Category_Selector$GUID)
runApp()
time_sector
emissions %>% filter(`GUID of node` == Category_Selector$GUID)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
level()
emissions %>% filter(Year == input$YearComp) %>% filter(`Layer in hierarchy` == 1)
emissions %>% filter(Year == input$YearComp, `Location of Node in hierarchy` == Category_Selector$tracker)
runApp()
runApp()
emissions %>% filter(Year == input$YearComp, `Location of Node in hierarchy` == Category_Selector$tracker)
emissions %>% filter(Year == input$YearComp, `Location of Node in hierarchy` == Category_Selector$tracker) %>% select(Sector, GHG_Selector$selected)
emissions %>% filter(Year == input$YearComp, `Location of Node in hierarchy` == Category_Selector$tracker) %>% select(Sector, GHG_Selector$selected) %>% mutate(Totals = rowSums(.[.,-1,drop = FALSE])) %>% select(1, Totals)
emissions %>% filter(Year == input$YearComp, `Location of Node in hierarchy` == Category_Selector$tracker) %>% select(Sector, GHG_Selector$selected) %>% mutate(Totals = rowSums(.[.,-1,drop = FALSE]))
emissions %>% filter(Year == input$YearComp, `Location of Node in hierarchy` == Category_Selector$tracker) %>% select(Sector, GHG_Selector$selected) %>% mutate(Totals = rowSums(.[,-1,drop = FALSE]))
emissions %>% filter(Year == input$YearComp, `Location of Node in hierarchy` == Category_Selector$tracker) %>% select(Sector, GHG_Selector$selected) %>% mutate(Totals = rowSums(.[,-1,drop = FALSE])) %>% select(1, Totals)
Comparison
runApp()
Comparison
Comparison
Comparison
runApp()
Comparison
data.frame(Totals = Comparison[c(1,2,3,5,6,4,)])
data.frame(Totals = Comparison[c(1,2,3,5,6,4),])
Comparison[c(1,2,3,5,6,4),]
runApp()
runApp()
runApp()
Category_Selector$selected
runAPp()
runApp()
runApp()
runApp()
library(shiny)
runApp()
filtered_GHG
filtered_GHG %>% tibble()
runApp()
runApp()
runApp()
emission_sector
emission_sector %>% dplyr::arrange(`Name on tab`)
runApp()
filtered_GHG
filtered_GHG
sign(filtered_GHG$Totals)
runApp()
runApp(runApp9)
runApp9
runApp()
runApp()
runApp()
runApp9
runApp()
input$Emissions_click
input$Emissions_click$x
Sector_Frame$data %>% filter(`Location of Node in hierarchy` == Category_Selector$tracker)
sector_level
summary_emission
Current_Summary$summary
arrange(match(sector_level$`Name on tab`, Current_Summary$summary$`Name on tab`))
?match
match(sector_level$`Name on tab`, Current_Summary$summary$`Name on tab`)
dplyr::arrange(sector_level, match(sector_level$`Name on tab`, Current_Summary$summary$`Name on tab`))
a <- c(1,3,5,6,7)
b <- c(3,5,7,6,1)
match(a,b)
c <- arrange(match(a,b))
c <- dplyr::arrange(match(a,b))
c <- (1,2,3,4,5)
c <- c(1,2,3,4,5)
c <- dplyr::arrange(match(a,b))
runApp()
runApp()
Sector_Frame$data %>%
filter(`Location of Node in hierarchy` == Category_Selector$tracker) %>%
dplyr::arrange(match(.$`Name on tab`, Current_Summary$summary$`Name on tab`))
runApp()
filtered_GHG
runApp()
?excel_sheets
# Function which extracts all the useful observations from the provided excel file
# Get
sheets <- excel_sheets(
"Data/Sent to Datacom 25 March 2020 - Emissions data 1990-2018 for Emissions Tracker 2020 submission version T from CRF 13 Feb 2020.xlsx"
)[-c(1, 31)]
# Function which extracts all the useful observations from the provided excel file
# Get
sheets <- excel_sheets(
"Data/Sent to Datacom 25 March 2020 - Emissions data 1990-2018 for Emissions Tracker 2020 submission version T from CRF 13 Feb 2020.xlsx"
)[-c(1, length(sheets))]
# Function which extracts all the useful observations from the provided excel file
# Get
sheets <- excel_sheets(
"Data/Sent to Datacom 25 March 2020 - Emissions data 1990-2018 for Emissions Tracker 2020 submission version T from CRF 13 Feb 2020.xlsx"
)[-c(1, length(sheets))]
# Function which extracts all the useful observations from the provided excel file
# Get
sheets <- excel_sheets(
"Data/Sent to Datacom 25 March 2020 - Emissions data 1990-2018 for Emissions Tracker 2020 submission version T from CRF 13 Feb 2020.xlsx"
)[-c(1, length(.))]
sheets
# Function which extracts all the useful observations from the provided excel file
# Get
sheets <- excel_sheets(
"Data/Sent to Datacom 25 March 2020 - Emissions data 1990-2018 for Emissions Tracker 2020 submission version T from CRF 13 Feb 2020.xlsx"
)[-c(1, length(.)-1)]
# Function which extracts all the useful observations from the provided excel file
# Get
sheets <- excel_sheets(
"Data/Sent to Datacom 25 March 2020 - Emissions data 1990-2018 for Emissions Tracker 2020 submission version T from CRF 13 Feb 2020.xlsx"
)[-c(1, length(.)-1)]
# Function which extracts all the useful observations from the provided excel file
# Get
sheets <- excel_sheets(
"Data/Sent to Datacom 25 March 2020 - Emissions data 1990-2018 for Emissions Tracker 2020 submission version T from CRF 13 Feb 2020.xlsx"
)[-c(1, 31)]
# Function which extracts all the useful observations from the provided excel file
# Get
sheets <- excel_sheets(
"Data/Sent to Datacom 25 March 2020 - Emissions data 1990-2018 for Emissions Tracker 2020 submission version T from CRF 13 Feb 2020.xlsx"
)[-c(1, lenth(excel_sheets(
"Data/Sent to Datacom 25 March 2020 - Emissions data 1990-2018 for Emissions Tracker 2020 submission version T from CRF 13 Feb 2020.xlsx"
)))]
# Function which extracts all the useful observations from the provided excel file
# Get
sheets <- excel_sheets(
"Data/Sent to Datacom 25 March 2020 - Emissions data 1990-2018 for Emissions Tracker 2020 submission version T from CRF 13 Feb 2020.xlsx"
)[-c(1, length(excel_sheets(
"Data/Sent to Datacom 25 March 2020 - Emissions data 1990-2018 for Emissions Tracker 2020 submission version T from CRF 13 Feb 2020.xlsx"
)))]
# Function which extracts all the useful observations from the provided excel file
# Get
sheets <- excel_sheets(
"Data/Sent to Datacom 25 March 2020 - Emissions data 1990-2018 for Emissions Tracker 2020 submission version T from CRF 13 Feb 2020.xlsx"
)[-c(1, length(excel_sheets(
"Data/Sent to Datacom 25 March 2020 - Emissions data 1990-2018 for Emissions Tracker 2020 submission version T from CRF 13 Feb 2020.xlsx"
)))]
runApp()
library(shiny)
runApp()
runApp()
runApp()
runApp()
level()
sector_level
sector_level
Sector_Frame$data %>% view()
# Get list of all years present (assumes first sheet is time series and last sheet is GUIDs)
sheets <- excel_sheets(
"Data/Sent to Datacom 25 March 2020 - Emissions data 1990-2018 for Emissions Tracker 2020 submission version T from CRF 13 Feb 2020.xlsx"
)[-c(1, length(excel_sheets(
"Data/Sent to Datacom 25 March 2020 - Emissions data 1990-2018 for Emissions Tracker 2020 submission version T from CRF 13 Feb 2020.xlsx")))]
# Read all emissions data into list
list_emissions <- lapply(sheets, function(x)
read_excel(
"Data/emissions data.xlsx",
sheet = x,
range = c("A11:AP1072")
)[,
c(1:4, 11, 18, 26, 27, 29, 38, 40, 41, 42)])
list_emissions[[1]] %>% view()
runApp()
runApp()
runApp()
runAPp()
runApp()
shiny::runApp()
runApp()
runApp()
